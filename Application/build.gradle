buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
        classpath "jp.leafytree.gradle:gradle-android-scala-plugin:2.2-SNAPSHOT"
    }
}

apply plugin: 'com.android.application'
apply plugin: "jp.leafytree.android-scala"

repositories {
    jcenter()
}

dependencies {
    compile "com.android.support:support-v4:24.1.1"
    compile "com.android.support:gridlayout-v7:24.1.1"
    compile "com.android.support:cardview-v7:24.1.1"
    compile "com.android.support:appcompat-v7:24.1.1"
    compile "org.scala-lang:scala-library:2.11.7"
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"


    buildTypes {

        debug {
            useProguard true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
        release {
            useProguard true
            minifyEnabled true
            proguardFile file('proguard.cfg')
        }

    }

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 24
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                scala.srcDirs "src/${dir}/scala"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

}
